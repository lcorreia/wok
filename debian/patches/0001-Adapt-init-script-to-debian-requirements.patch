From cabce90cf568b79ac362811e8461a0cee50531e1 Mon Sep 17 00:00:00 2001
From: Lucio Correia <luciojhc@linux.vnet.ibm.com>
Date: Thu, 12 Jan 2017 11:07:48 -0200
Subject: [PATCH] Adapt init script to debian requirements

Signed-off-by: Lucio Correia <luciojhc@linux.vnet.ibm.com>
---
 contrib/wokd.sysvinit | 225 ++++++++++++++++++++++++++++++++++----------------
 1 file changed, 156 insertions(+), 69 deletions(-)

diff --git a/contrib/wokd.sysvinit b/contrib/wokd.sysvinit
index 2c867d0..80420a5 100644
--- a/contrib/wokd.sysvinit
+++ b/contrib/wokd.sysvinit
@@ -1,10 +1,11 @@
-#! /bin/sh
+#!/bin/sh
 #
-# wokd		Wok Web Server
+# wokd         Wok Web Server
 #
-# Copyright IBM Corp, 2015-2016
+# Copyright IBM Corp, 2015-2017
 #
 # Author: Aline Manera <alinefm@br.ibm.com>
+# Author: Frederic Bonnard <frediz@linux.vnet.ibm.com>
 #
 # This library is free software; you can redistribute it and/or
 # modify it under the terms of the GNU Lesser General Public
@@ -21,84 +22,170 @@
 # Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA
 #
 ### BEGIN INIT INFO
-# Provides: wokd
-# Required-Start: libvirtd
-# Required-Stop:
-# Default-Start: 3 5
-# Default-Stop: 0 1 2 6
-# Description: Start the wokd daemon
+# Provides:          wokd
+# Required-Start:    $local_fs $network $remote_fs $syslog
+# Required-Stop:     $local_fs $network $remote_fs $syslog
+# Default-Start:     2 3 4 5
+# Default-Stop:      0 1 6
+# Short-Description: Wok daemon
+# Description:       Wokd runs base web server for Kimchi and Ginger, which are
+#                    HTML5 tools to manage hosts and virtual machines.
 ### END INIT INFO
 
-. /etc/rc.status
+# Do NOT "set -e"
 
-# Shell functions sourced from /etc/rc.status:
-#      rc_check         check and set local and overall rc status
-#      rc_status        check and set local and overall rc status
-#      rc_status -v     ditto but be verbose in local rc status
-#      rc_status -v -r  ditto and clear the local rc status
-#      rc_failed        set local and overall rc status to failed
-#      rc_reset         clear local rc status (overall remains)
-#      rc_exit          exit appropriate to overall rc status
+# PATH should only include /usr/* if it runs after the mountnfs.sh script
+PATH=/sbin:/usr/sbin:/bin:/usr/bin
+CONF=/etc/default/wok
+DESC="wok"
+NAME=wokd
+DAEMON=/usr/bin/wokd
+DAEMON_ARGS=""
+PIDFILE=/var/run/$NAME.pid
+SCRIPTNAME=/etc/init.d/$NAME
 
-# First reset status of this service
-rc_reset
+# Exit if the package is not installed
+[ -x "$DAEMON" ] || exit 0
 
-case "$1" in
-    start)
-	echo -n "Starting wokd daemon"
-	## Start daemon with startproc(8). If this fails
-	## the echo return value is set appropriate.
-
-	startproc -f /usr/bin/wokd > /dev/null 2>&1
-
-	# Remember status and be verbose
-	rc_status -v
-	;;
-    stop)
-	echo -n "Shutting down wokd daemon"
-	## Stop daemon with killproc(8) and if this fails
-	## set echo the echo return value.
+# Read configuration variable file if it is present
+[ -r $CONF ] && . $CONF
 
-	killproc -TERM /usr/bin/wokd
+# Load the VERBOSE setting and other rcS variables
+. /lib/init/vars.sh
 
-	# Remember status and be verbose
-	rc_status -v
-	;;
-    try-restart)
-        ## Stop the service and if this succeeds (i.e. the
-        ## service was running before), start it again.
-        $0 status >/dev/null &&  $0 restart
+# Define LSB log_* functions.
+# Depend on lsb-base (>= 3.2-14) to ensure that this file is present
+# and status_of_proc is working.
+. /lib/lsb/init-functions
 
-        # Remember status and be quiet
-        rc_status
-        ;;
-    restart)
-        ## Stop the service and regardless of whether it was
-        ## running or not, start it again.
-        $0 stop
-        $0 start
+#
+# Function that starts the daemon/service
+#
+do_start()
+{
+	# Return
+	#   0 if daemon has been started
+	#   1 if daemon was already running
+	#   2 if daemon could not be started
+	#start-stop-daemon --start --quiet --pidfile $PIDFILE --exec $DAEMON --test > /dev/null \
+	#	|| return 1
+	#start-stop-daemon --start --quiet --pidfile $PIDFILE --exec $DAEMON -b -- \
+	#	$DAEMON_ARGS \
+	#	|| return 2
+	#start-stop-daemon --start --quiet --pidfile $PIDFILE --exec $DAEMON --test > /dev/null \
+	#	|| return 1
+	#start-stop-daemon --start --quiet --pidfile $PIDFILE --exec $DAEMON -b -- \
+	#	$DAEMON_ARGS \
+	#	|| return 2
+	# The above code will not work for interpreted scripts, use the next
+	# six lines below instead (Ref: #643337, start-stop-daemon(8) )
+	start-stop-daemon --start --quiet --pidfile $PIDFILE --startas $DAEMON \
+		--name $NAME --test > /dev/null \
+		|| return 1
+	start-stop-daemon --start --quiet --pidfile $PIDFILE --startas $DAEMON \
+		--name $NAME -b -m -- $DAEMON_ARGS \
+		|| return 2
 
-        # Remember status and be quiet
-        rc_status
-        ;;
-    status)
-	echo -n "Checking for service wokd "
-        ## Check status with checkproc(8), if process is running
-        ## checkproc will return with exit status 0.
+	# Add code here, if necessary, that waits for the process to be ready
+	# to handle requests from services started subsequently which depend
+	# on this one.  As a last resort, sleep for some time.
+}
 
-        # Status has a slightly different for the status command:
-        # 0 - service running
-        # 1 - service dead, but /var/run/  pid  file exists
-        # 2 - service dead, but /var/lock/ lock file exists
-        # 3 - service not running
+#
+# Function that stops the daemon/service
+#
+do_stop()
+{
+	# Return
+	#   0 if daemon has been stopped
+	#   1 if daemon was already stopped
+	#   2 if daemon could not be stopped
+	#   other if a failure occurred
+	start-stop-daemon --stop --quiet --retry=INT/30/KILL/5 --pidfile $PIDFILE --remove-pidfile
+	RETVAL="$?"
+	[ "$RETVAL" = 2 ] && return 2
+	# Wait for children to finish too if this is a daemon that forks
+	# and if the daemon is only ever run from this initscript.
+	# If the above conditions are not satisfied then add some other code
+	# that waits for the process to drop all resources that could be
+	# needed by services started subsequently.  A last resort is to
+	# sleep for some time.
+	start-stop-daemon --stop --quiet --oknodo --retry=0/30/KILL/5 --startas $DAEMON --name $NAME
+	[ "$?" = 2 ] && return 2
+	# Many daemons don't delete their pidfiles when they exit.
+	#rm -f $PIDFILE
+	return "$RETVAL"
+}
 
-	checkproc /usr/bin/wokd
+#
+# Function that sends a SIGHUP to the daemon/service
+#
+do_reload() {
+	#
+	# If the daemon can reload its configuration without
+	# restarting (for example, when it is sent a SIGHUP),
+	# then implement that here.
+	#
+	start-stop-daemon --stop --signal 1 --quiet --pidfile $PIDFILE --name $NAME
+	return 0
+}
 
-	rc_status -v
+case "$1" in
+  start)
+	[ "$VERBOSE" != no ] && log_daemon_msg "Starting $DESC" "$NAME"
+	do_start
+	case "$?" in
+		0|1) [ "$VERBOSE" != no ] && log_end_msg 0 ;;
+		2) [ "$VERBOSE" != no ] && log_end_msg 1 ;;
+	esac
 	;;
-    *)
-	echo "Usage: $0 {start|stop|status|try-restart|restart}"
-	exit 1
+  stop)
+	[ "$VERBOSE" != no ] && log_daemon_msg "Stopping $DESC" "$NAME"
+	do_stop
+	case "$?" in
+		0|1) [ "$VERBOSE" != no ] && log_end_msg 0 ;;
+		2) [ "$VERBOSE" != no ] && log_end_msg 1 ;;
+	esac
+	;;
+  status)
+	status_of_proc "$DAEMON" "$NAME" && exit 0 || exit $?
+	;;
+  #reload|force-reload)
+	#
+	# If do_reload() is not implemented then leave this commented out
+	# and leave 'force-reload' as an alias for 'restart'.
+	#
+	#log_daemon_msg "Reloading $DESC" "$NAME"
+	#do_reload
+	#log_end_msg $?
+	#;;
+  restart|force-reload)
+	#
+	# If the "reload" option is implemented then remove the
+	# 'force-reload' alias
+	#
+	log_daemon_msg "Restarting $DESC" "$NAME"
+	do_stop
+	case "$?" in
+	  0|1)
+		do_start
+		case "$?" in
+			0) log_end_msg 0 ;;
+			1) log_end_msg 1 ;; # Old process is still running
+			*) log_end_msg 1 ;; # Failed to start
+		esac
+		;;
+	  *)
+		# Failed to stop
+		log_end_msg 1
+		;;
+	esac
+	;;
+  *)
+	#echo "Usage: $SCRIPTNAME {start|stop|restart|reload|force-reload}" >&2
+	echo "Usage: $SCRIPTNAME {start|stop|status|restart|force-reload}" >&2
+	exit 3
 	;;
 esac
-rc_exit
+
+:
-- 
2.7.4

